version: '3.4'

networks:
  backend:
  frontend:    

services:

  jenkins:
        image: jenkins/jenkins:lts
        privileged: true
        user: root
        ports:
          - 8080:8080
          - 50000:50000
        container_name: jenkins-lts
        volumes:
          - ~/jenkins_home:/var/jenkins_home
          - /var/run/docker.sock:/var/run/docker.sock
          - /usr/local/bin/docker:/usr/local/bin/docker
  
  rabbitmq3:
        container_name: "rabbitmq"
        image: rabbitmq:3.8-management-alpine
        ports:
            # AMQP protocol port
            - '5672:5672'
            # HTTP management UI
            - '15672:15672'
        volumes:
           - ./data:/var/lib/rabbitmq:rw
           - ./rabbitmq/rabbitmq.config:/etc/rabbitmq/rabbitmq.config:ro
           - ./rabbitmq/definitions.json:/opt/definitions.json:ro        
  
  sco.gateway.api:
    image: ${DOCKER_REGISTRY-}scogatewayapi
    build:
      context: .
      dockerfile: SCO.Gateway.Api/Dockerfile
    depends_on:
        - rabbitmq3
        - sco.basketservice.api
        - sco.productservice.api
    ports:
      - 8001:80
    networks:
      - backend
      - frontend
  
  sco.basketservice.api:
    image: ${DOCKER_REGISTRY-}scobasketserviceapi
    build:
      context: .
      dockerfile: SCO.BasketService.Api/Dockerfile
    networks:
      - backend  

  sco.productservice.api:
    image: ${DOCKER_REGISTRY-}scoproductserviceapi
    build:
      context: .
      dockerfile: SCO.ProductService.Api/Dockerfile
    networks:
      - backend

  sco.web.ui:
    image: ${DOCKER_REGISTRY-}scowebui
    build:
      context: .
      dockerfile: SCO.Web.UI/Dockerfile
    ports:
      - 8002:80
    networks:
      - frontend