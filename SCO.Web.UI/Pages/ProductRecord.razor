@inject HttpClient httpClient
@using SCO.Contracts.DTOs

@if (!isEditMode)
{
    <tr>
        <td>@Product.ShortName</td>
        <td>@Product.Barcode</td>
        <td>@Product.UnitPrice</td>
        <td><a @onclick="() =>{ isEditMode = true; }" href="javascript:void(0)"><i class="oi oi-pencil"></i></a></td>
        <td><a @onclick="async () => await DeleteProduct.InvokeAsync(Product.Id)" href="javascript:void(0)"><i class="oi oi-trash"></i></a></td>
    </tr>
}
else
{
    <tr>
        <td><input class="form-control" @bind="Product.ShortName" placeholder="Name" /></td>
        <td><input class="form-control" @bind="Product.Barcode" placeholder="Barcode" /></td>
        <td><input class="form-control" @bind="Product.UnitPrice" placeholder="Price" /></td>
        <td class="pt-3"><a @onclick="async () => {await UpdateProduct.InvokeAsync(Product);isEditMode = false;}" href="javascript:void(0)"><i class="oi oi-thumb-up"></i></a></td>
        <td></td>
    </tr>
}

@code {
    private bool isEditMode = false;

    [Parameter]
    public ProductDto Product { get; set; }

    [Parameter]
    public EventCallback<ProductDto> UpdateProduct { get; set; }

    [Parameter]
    public EventCallback<Guid> DeleteProduct { get; set; }
}
